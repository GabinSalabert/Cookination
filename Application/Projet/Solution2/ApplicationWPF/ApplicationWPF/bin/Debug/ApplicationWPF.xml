<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApplicationWPF</name>
    </assembly>
    <members>
        <member name="T:WpfApplication1.AddTI">
            <summary>
            Logique d'interaction pour AddTI.xaml
            </summary>
            <summary>
            AddTI
            </summary>
        </member>
        <member name="M:WpfApplication1.AddTI.#ctor">
            <summary>
            Ouverture de la fenêtre.
            </summary>
        </member>
        <member name="M:WpfApplication1.AddTI.num_PreviewTextInput(System.Object,System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Vérifie que la saisie correspond bien à des digit.
            </summary>
        </member>
        <member name="M:WpfApplication1.AddTI.Button_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Vérifie que les champs sont bien remplies. Si ce n'est pas le cas les border passent en rouge. Ajoute le nouvel élement dans la liste correspondante.
            </summary>
        </member>
        <member name="M:WpfApplication1.AddTI.textbox_PreviewTextInput(System.Object,System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Si le champ était vide et que du texte est saisie alors la border est reset.
            </summary>
        </member>
        <member name="M:WpfApplication1.AddTI.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:WpfApplication1.Converter">
            <summary>
            Logique d'interaction pour WindowEdit.xaml
            </summary>
        </member>
        <member name="M:WpfApplication1.Converter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convertion d'une SolidColorBrush en Brushes.
            </summary>
        </member>
        <member name="M:WpfApplication1.Converter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Retourne à l'état précédent.
            </summary>
        </member>
        <member name="T:WpfApplication1.Field">
            <summary>
            Logique d'interaction pour Field.xaml
            </summary>
            <summary>
            Field
            </summary>
        </member>
        <member name="M:WpfApplication1.Field.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:WpfApplication1.WindowDelete">
            <summary>
            Logique d'interaction pour Window1.xaml
            </summary>
            <summary>
            WindowDelete
            </summary>
        </member>
        <member name="P:WpfApplication1.WindowDelete.MyListBox">
            <summary>
            Propriété de la listbox dans la mainWindow.
            </summary>
        </member>
        <member name="M:WpfApplication1.WindowDelete.#ctor">
            <summary>
            Ouverture de la fenêtre.
            </summary>
        </member>
        <member name="M:WpfApplication1.WindowDelete.click_btnNon(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Ferme la fenêtre et annule la modification.
            </summary>
        </member>
        <member name="M:WpfApplication1.WindowDelete.click_btnOui(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Remove le plat sélectionné dans le modèle.
            </summary>
        </member>
        <member name="M:WpfApplication1.WindowDelete.Window_Closing(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Si le plat n'a pas été supprimé alors il est automatiquement désélectionné.
            </summary>
        </member>
        <member name="M:WpfApplication1.WindowDelete.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:WpfApplication1.WindowAdd">
            <summary>
            Logique d'interaction pour Window1.xaml
            </summary>
            <summary>
            WindowAdd
            </summary>
        </member>
        <member name="P:WpfApplication1.WindowAdd.pathim">
            <summary>
            Chemin de l'image.
            </summary>
        </member>
        <member name="P:WpfApplication1.WindowAdd.TabField">
            <summary>
            Observable collection de champs.
            </summary>
        </member>
        <member name="P:WpfApplication1.WindowAdd.MyListBox">
            <summary>
            Propriété de la listbox dans la mainWindow.
            </summary>
        </member>
        <member name="P:WpfApplication1.WindowAdd.TabField2">
            <summary>
            Observable collection de champs.
            </summary>
        </member>
        <member name="P:WpfApplication1.WindowAdd.j">
            <summary>
            Entier j
            </summary>
        </member>
        <member name="P:WpfApplication1.WindowAdd.i">
            <summary>
            Entier i
            </summary>
        </member>
        <member name="M:WpfApplication1.WindowAdd.#ctor">
            <summary>
            Ouverture de la fenêtre.
            </summary>
        </member>
        <member name="M:WpfApplication1.WindowAdd.click_btnBrowse(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Ouvre une fenêtre de dialogue permettant de parcourrir et sélectionner un/les fichiers de son pc.
            Le path de l'image est récupéré dans une variable.
            </summary>
        </member>
        <member name="M:WpfApplication1.WindowAdd.AddIngs(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Crée un nouveau userControl à chaque fois avec un label devant qui s'incrémente/se désincrémente au fur et à mesure.
            Si le compteur n'est pas à 0 et qu'un UC est crée, alors le label indiquant qu'il n'y a plus de field lorsque l'on veut en supprimer un est caché.
            </summary>
        </member>
        <member name="M:WpfApplication1.WindowAdd.AddTools(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Crée un nouveau userControl (Dans le tableau et dans la grid) à chaque fois avec un label devant qui s'incrémente/se désincrémente au fur et à mesure.
            Si le compteur n'est pas à 0 et qu'un UC est crée, alors le label indiquant qu'il n'y a plus de field lorsque l'on veut en supprimer un est caché.
            </summary>
        </member>
        <member name="M:WpfApplication1.WindowAdd.DelTools(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Supprime le dernier filed crée. Si le compteur est décrémenté à -1, un label indiquant qu'il n'y a pas de field apparaît.
            </summary>
        </member>
        <member name="M:WpfApplication1.WindowAdd.DelIngs(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Supprime le dernier filed crée. Si le compteur est décrémenté à -1, un label indiquant qu'il n'y a pas de field apparaît.
            </summary>
        </member>
        <member name="M:WpfApplication1.WindowAdd.Validate(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Valide l'ajoût du plat :
            Vérifie si tous les champs sont bien remplies. Si ce n'est pas le cas, un label apparaît.
            On parcours une fois le tableau de field pour vérifier si un champ est vide. Si oui on parcours a nouveau afin de mettre les borders en red (Aussi pour des champs précédants non remplies).
            On crée un nouveau plat avec toutes les données recueillies dans l'observable collection de plats et on repositionne la fenêtre principale au centre de l'écran. 
            </summary>
        </member>
        <member name="M:WpfApplication1.WindowAdd.Cancel(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Repositionne la fenêtre principale au centre de l'écran et ferme la fenêtre d'ajoût.
            </summary>
        </member>
        <member name="M:WpfApplication1.WindowAdd.Window_Closing(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Repositionne la fenêtre principale au centre de l'écran et désélectionne un plat (si sélection) de la liste.
            </summary>
        </member>
        <member name="M:WpfApplication1.WindowAdd.textBox13_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Si le champ n'était pas remplie mais que du texte est saisie alors la border est reset.
            </summary>
        </member>
        <member name="M:WpfApplication1.WindowAdd.cat_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Met la textbox en rouge si le texte saisie ne correspond pas à une catégorie autorisée.
            Si la saisie est bonne, la border est reset.
            </summary>
        </member>
        <member name="M:WpfApplication1.WindowAdd.Rece_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Permet le retoour à la ligne dans la textbox de la recette (meilleure visibilité).
            </summary>
        </member>
        <member name="M:WpfApplication1.WindowAdd.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:WpfApplication1.App">
            <summary>
            Logique d'interaction pour App.xaml
            </summary>
        </member>
        <member name="T:WpfApplication1.Usrctrl">
            <summary>
            Logique d'interaction pour Usrctrl.xaml.
            </summary>
            <summary>
            Usrctrl
            </summary>
        </member>
        <member name="F:WpfApplication1.Usrctrl.ListBox">
            <summary>
             Déclaration d'une DependencyProperty
            </summary>
        </member>
        <member name="P:WpfApplication1.Usrctrl.MyListBox">
            <summary>
            DependencyProperty sur la listbox de la mainWindow.
            </summary>
        </member>
        <member name="M:WpfApplication1.Usrctrl.#ctor">
            <summary>
            Logique d'interaction pour WindowEdit.xaml.
            </summary>
        </member>
        <member name="M:WpfApplication1.Usrctrl.Button_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Logique d'interaction pour WindowEdit.xaml.
            </summary>
            <remarks> Si le click est sur le bouton ajouter des outils, alors les labels sont initialisés correctement et la fenêtre d'ajout s'ouvre. </remarks>
        </member>
        <member name="M:WpfApplication1.Usrctrl.Button_Click_1(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Logique d'interaction pour WindowEdit.xaml.
            </summary>
            <remarks> Si le click est sur le bouton supprimer des outils, l'outil est supprimé. </remarks>
        </member>
        <member name="M:WpfApplication1.Usrctrl.Button_Click_2(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Logique d'interaction pour WindowEdit.xaml.
            </summary>
            <remarks>Si le clique est sur le bouton ajouter des ingrédients, alors les labels sont initialisés correctement et la fenêtre d'ajout s'ouvre.</remarks>
        </member>
        <member name="M:WpfApplication1.Usrctrl.Button_Click_3(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Logique d'interaction pour WindowEdit.xaml.
            </summary>
            <remarks>Si le clique est sur le bouton supprimer des ingrédients, l'ingrédient est supprimé.</remarks>
        </member>
        <member name="M:WpfApplication1.Usrctrl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:WpfApplication1.MainWindow">
            <summary>
            Logique d'interaction pour MainWindow.xaml
            </summary>
            <summary>
            MainWindow
            </summary>
        </member>
        <member name="M:WpfApplication1.MainWindow.#ctor">
             <summary>
            Ouverture fenêtre principale :
            Création d'une exception en cas de problème d'ouverture de la MainWindow. 
            Initialisation de la police et de l'évenement si une touche est pressée.
             </summary>
        </member>
        <member name="M:WpfApplication1.MainWindow.MainWindow_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Easter egg :
            Il faut que le plat sélectionné ait pour nom "Serpent" et que l'utilisateur rentre "Bonus" au clavier.
            Lancement d'une application codée en Processing (Java) dans un thread à part :
            Si le fichier existe, l'application est lancée.
            Sinon, on unzip le .zip à l'emplacement souhaité.
            </summary>
        </member>
        <member name="M:WpfApplication1.MainWindow.Window_Closed(System.Object,System.EventArgs)">
            <summary>
            Toutes les données sont enregistrées dans un fichier xml lorsque la fenêtre principale est fermée.
            </summary>
        </member>
        <member name="M:WpfApplication1.MainWindow.click_btnAjoutPlat(System.Object,System.EventArgs)">
            <summary>
            Lorsqu'on clique sur le bouton "+", on décale la fenêtre principale sur la droite et on ouvre la fenêtre d'ajout en modale.
            </summary>
        </member>
        <member name="M:WpfApplication1.MainWindow.click_btnBg(System.Object,System.EventArgs)">
            <summary>
            Night/day mode :
            Lorsque l'on clique sur le bouton, le background ainsi que les foreground passent du mode sombre à clair et vice versa.
            </summary>
        </member>
        <member name="M:WpfApplication1.MainWindow.buttonSupprPlat_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Lorsque l'on clique sur le bouton, on ouvre la fenêtre de confirmation de supression.
            </summary>
        </member>
        <member name="M:WpfApplication1.MainWindow.buttonModifPlat_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Lorsque l'on clique sur le bouton, on décale la fenêtre principale sur la droite et on ouvre la fenêtre de modification du plat.
            On bind le dataContexte de la fenêtre que l'on ouvre sur le plat sélectionné dans la liste.
            </summary>
        </member>
        <member name="M:WpfApplication1.MainWindow.buttonSearch_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            L'observable collection de plats est triée par ordre alphabétique grâce à une requête Linq.
            On reset le binding du dataContexte sur l'observable collection maintenant triée pour la mettre à jour.
            </summary>
        </member>
        <member name="M:WpfApplication1.MainWindow.listBox_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Lorsqu'un plat est sélectionné dans la liste, si l'utilisateur est sur l'onglet Welcome alors il est automatiquement dirigé sur l'onglet général.
            </summary>
        </member>
        <member name="M:WpfApplication1.MainWindow.SearchChange(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Barre de recherche :
            Si "Search with name" est checkée, alors la requête Linq cherchera les noms des plats avec la chaîne rentrée.
            Si "Search with categ" est checkée, alors la requête Linq cherchera les plats avec la catégorie sélectionnée dans la combobox..
            </summary>
        </member>
        <member name="M:WpfApplication1.MainWindow.comboBox_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            On appelle la fonction du dessus en passant en paramètre l'item sélectionné de la combobox.
            Si l'utilisateur clique sur la chaîne vide de la combo box, le dataContexte est reset sur la collection de plats.
            </summary>
        </member>
        <member name="M:WpfApplication1.MainWindow.Check1_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Si la recherche par nom est checké, alors on déchecke la recherche par catégorie et on rend accessible la barre de recherche.
            </summary>
        </member>
        <member name="M:WpfApplication1.MainWindow.Check2_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Si la recherche par catégorie est checké, alors on déchecke la recherche par nom et on rend inaccessible la barre de recherche.
            </summary>
        </member>
        <member name="M:WpfApplication1.MainWindow.calcul_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Calcul de l'IMC :
            Si "être un grand sportif est checké", on néglige quelques kilos.
            On calcule l'IMC en convertissant le poids et la taille en double. Calcul -> Poids/Taille² (/100 car taille en cm).
            Analyse de toute les possibilités d'IMC et en fonction de celles-ci affichage des propositions de catégories.
            </summary>
        </member>
        <member name="M:WpfApplication1.MainWindow.poids_PreviewTextInput(System.Object,System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Expression régulière permettant de filtrer seulemement les digit.
            </summary>
        </member>
        <member name="M:WpfApplication1.MainWindow.taille_PreviewTextInput(System.Object,System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Expression régulière permettant de filtrer seulemement les digit.
            </summary>
        </member>
        <member name="M:WpfApplication1.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ApplicationWPF.WindowEdit">
            <summary>
            Logique d'interaction pour WindowEdit.xaml
            </summary>
            <summary>
            WindowEdit
            </summary>
        </member>
        <member name="P:ApplicationWPF.WindowEdit.pathim">
            <summary>
            Chemin de l'image.
            </summary>
        </member>
        <member name="P:ApplicationWPF.WindowEdit.MyListBox">
            <summary>
            Propriété de la listbox dans la mainWindow.
            </summary>
        </member>
        <member name="M:ApplicationWPF.WindowEdit.#ctor">
            <summary>
            Ouverture de la fenêtre.
            </summary>
        </member>
        <member name="M:ApplicationWPF.WindowEdit.click_btnFinish(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Bouton qui ferme la fenêtre de modification, set les données et replace la mainWindow.
            </summary>
        </member>
        <member name="M:ApplicationWPF.WindowEdit.click_btnBrowse(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Ouvre une fenêtre de dialogue permettant de parcourrir et sélectionner un/les fichiers de son pc.
            Le path de l'image est récupéré dans une variable.
            </summary>
        </member>
        <member name="M:ApplicationWPF.WindowEdit.Window_Closing(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Replace la mainWindow lors de la fermeture et désélectionne le plat dans la liste.
            </summary>
        </member>
        <member name="M:ApplicationWPF.WindowEdit.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ApplicationWPF.Properties.Resources">
            <summary>
              Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
            </summary>
        </member>
        <member name="P:ApplicationWPF.Properties.Resources.ResourceManager">
            <summary>
              Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
            </summary>
        </member>
        <member name="P:ApplicationWPF.Properties.Resources.Culture">
            <summary>
              Remplace la propriété CurrentUICulture du thread actuel pour toutes
              les recherches de ressources à l'aide de cette classe de ressource fortement typée.
            </summary>
        </member>
        <member name="T:ApplicationWpf.App">
            <summary>
            App
            </summary>
        </member>
        <member name="M:ApplicationWpf.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:ApplicationWpf.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
    </members>
</doc>
